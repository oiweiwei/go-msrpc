<div class="content"><p>The IDataCollectorSet interface is used to query, update,
and control a <a href="f43f48aa-80a5-4b39-971e-7b3ac0bd9d0d#gt_a6bcff77-b369-406d-9c0c-35a4771c1d0f" data-linktype="relative-path">data collector
set</a>.</p><p>Objects that implement this interface represent a data
collector set. The following are the properties that MUST be implemented by
objects that implement the IDataCollectorSet interface.</p><table><thead>
  <tr>
   <th>
   <p>Property </p>
   </th>
   <th>
   <p>Read/write </p>
   </th>
   <th>
   <p>Description </p>
   </th>
  </tr>
 </thead><tbody><tr>
  <td>
  <p>DataCollectors</p>
  </td>
  <td>
  <p>R </p>
  </td>
  <td>
  <p>List of <a href="f43f48aa-80a5-4b39-971e-7b3ac0bd9d0d#gt_3184c8c5-f13b-4d77-b04a-b92feff97f61" data-linktype="relative-path">data collectors</a> in this
  set.</p>
  </td>
 </tr><tr>
  <td>
  <p>DataManager</p>
  </td>
  <td>
  <p>R </p>
  </td>
  <td>
  <p>Object that defines the policies for data retention
  and report generation. An example of data retention policies include when and
  if to compress data to a cabinet file or delete it. Example report generation
  policies include the steps to take to generate the report. The IDataManager
  interface, which the DataManager object implements, is specified in section <a href="16c70f7d-0f0e-4ae6-9785-be0032013c9f" data-linktype="relative-path">3.2.4.2</a>.</p>
  </td>
 </tr><tr>
  <td>
  <p>Description</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>The localizable description of the data collector set.
  </p>
  </td>
 </tr><tr>
  <td>
  <p>DescriptionUnresolved</p>
  </td>
  <td>
  <p>R</p>
  </td>
  <td>
  <p>The description of the data collector set in its raw
  form (prior to localization).</p>
  </td>
 </tr><tr>
  <td>
  <p>DisplayName</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>The localizable display name of the data collector
  set.</p>
  </td>
 </tr><tr>
  <td>
  <p>DisplayNameUnresolved</p>
  </td>
  <td>
  <p>R</p>
  </td>
  <td>
  <p>The display name of the data collector set in its raw
  form (prior to localization).</p>
  </td>
 </tr><tr>
  <td>
  <p>Duration</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>Determines the maximum amount of time that a data
  collector set MUST run. A value of 0 indicates that the data collector set
  MUST NOT not be stopped automatically.</p>
  </td>
 </tr><tr>
  <td>
  <p>Keywords</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>List of keywords associated with the data collector
  sets. Keywords are metadata for describing a data collector set; they are not
  parsed by the data collector set. They are intended to help the end user
  understand the contents of the data collector set, and serve no functional
  purpose as to how the data collector set is executed on the server. There MUST
  be at most 256 keywords that are associated with a data collector set; each
  keyword MUST NOT be more than 1024 characters in length. The keyword string
  cannot be the empty string, nor can the keyword string contain the semicolon
  (&#34;;&#34;) character.</p>
  </td>
 </tr><tr>
  <td>
  <p>LatestOutputLocation</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>The full path of the directory where data was stored
  the last time the data collector set ran.</p>
  </td>
 </tr><tr>
  <td>
  <p>Name</p>
  </td>
  <td>
  <p>R</p>
  </td>
  <td>
  <p>Name of the data collector set.</p>
  </td>
 </tr><tr>
  <td>
  <p>OutputLocation</p>
  </td>
  <td>
  <p>R</p>
  </td>
  <td>
  <p>The full path of the directory where data would be
  stored if the data collector set were to start now.</p>
  </td>
 </tr><tr>
  <td>
  <p>RootPath</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>The full path of the directory under which the data
  collector set stores its files. When subdirectories are used, they are
  created under this root directory.</p>
  </td>
 </tr><tr>
  <td>
  <p>Schedules</p>
  </td>
  <td>
  <p>R </p>
  </td>
  <td>
  <p>List of schedules that determines when the data collector
  set runs automatically. Each schedule specifies a time when the data
  collector will be started, the first day it will be started at that time, the
  last day it will be started at that time, and the days of the week it will be
  started. Each schedule is specified by an object implementing the ISchedule
  interface, specified in section <a href="6822e6fc-c23e-4ca3-9164-2d9b19eaa727" data-linktype="relative-path">3.2.4.12</a>.</p>
  </td>
 </tr><tr>
  <td>
  <p>SchedulesEnabled</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>Determines if the automatic start of the data
  collector set based on its schedules MUST be enabled or disabled. If enabled,
  the data collector set is automatically started when the conditions for one
  of the schedules (stored in the Schedules property) is met. If the data
  collector set is already running when a schedule condition is met, it is not
  restarted, and instead continues to run. If disabled, the data collector set
  can only be started manually. A data collector set is manually started by a
  call to Start, as specified in section <a href="d2ebf91b-9e67-440d-90e9-3134ee1613a0" data-linktype="relative-path">3.2.4.1.56</a>. </p>
  </td>
 </tr><tr>
  <td>
  <p>Security</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>The security descriptor of the data collector set that
  determines the access rights of groups or users. The security descriptor is
  expressed using the Security Descriptor Description Language (SDDL), as
  specified in <a href="../ms-dtyp/cca27429-5689-4a16-b2b4-9325d93e4ba2" data-linktype="relative-path">[MS-DTYP]</a>
  section <a href="../ms-dtyp/4f4251cc-23b6-44b6-93ba-69688422cb06" data-linktype="relative-path">2.5.1</a>.
  Changing the security descriptor can impact the ability of both local and
  remote users to read, modify, run, and delete the data collector set. </p>
  </td>
 </tr><tr>
  <td>
  <p>Segment</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>If this property is set to TRUE, the server MUST stop
  all data collectors when a segmentation condition occurs, increment the
  SerialNumber property, update LatestOutputLocation property, and restart all
  the data collectors, which begins logging to the new LatestOutputLocation.
  The FileNameFormat and SubdirectoryNameFormat properties are used to
  determine the new value of LatestOutputLocation. If both
  FileNameFormatPattern and SubdirectoryFormatPattern are set to plaNone, or
  both are set to plaPattern but no value is specified for
  FileNameFormatPattern and SubdirectoryFormatPattern, then the value of the
  LatestOutputLocation is not changed. In this case, the retention of the data
  that was obtained during the previous execution of the data collector depends
  on the respective properties of the data collector. For example, if LogAppend
  is specified for a data collector, then the events generated in the new
  segment are appended to the events that were added to the file during the
  previous segment execution. If this property is set to FALSE, the server MUST
  stop all the data collectors when a segmentation condition occurs. The
  segmentation condition is specified either by SegmentMaxDuration or
  SegmentMaxSize. </p>
  <p>PLA SHOULD NOT<a id="Appendix_A_Target_12"></a><a aria-label="Product behavior note 12" href="905cad7f-1a12-49b4-a263-461a2977ab71#Appendix_A_12" data-linktype="relative-path">&lt;12&gt;</a> stop
  the data collector set when the size of the active log file reaches
  SegmentMaxSize; rather, it creates a new file to enable the data collector
  set to continue logging information.</p>
  </td>
 </tr><tr>
  <td>
  <p>SegmentMaxDuration</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>Determines for how long a data collector set MUST run,
  in seconds, before a new segment MUST be created. A value of 0 indicates that
  there is no segment time limit. The default value is zero. Any unsigned long
  is a valid value for this property.</p>
  </td>
 </tr><tr>
  <td>
  <p>SegmentMaxSize</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>Determines the maximum size, in megabytes, of a log
  file. When the size is reached, a new log file MUST be created. A value of 0
  indicates that there is no segment size limit. The segment size is unlimited.
  The default value is zero. Any unsigned long is a valid value for this
  property.</p>
  </td>
 </tr><tr>
  <td>
  <p>SerialNumber</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>The serial number of the data collector set. Each time
  the data collector set runs it is assigned a serial number. The serial number
  for each data collector set starts at 1 and is incremented each time the data
  collector set runs. Each run of the data collector set has a serial number
  that is unique across all runs of the data collector set. Accordingly, each
  run of the data collector set has its own serial number and no two runs of
  the same data collector set have the same serial number. However, it is
  possible that two different runs of two different data collector sets will
  have the same serial number (the serial number is unique among all runs of
  one data collector set; it is not unique among all runs of all data collector
  sets). The serial number can optionally be used by an <a href="e91b47a7-18e2-44ff-a52e-1999f99d39ea" data-linktype="relative-path">AutoPathFormat</a>, which
  will cause the serial number to be appended to the name of the directory or
  files pertaining to each run of the data collector set. Using the serial
  number as an AutoPathFormat prevents possible collisions in directory or file
  naming.</p>
  <p>This property serves as a serial number across all
  runs of a particular data collector set on a particular machine, not across
  all data collector sets or all machines.</p>
  <p>Any unsigned long is a valid value for this property.</p>
  </td>
 </tr><tr>
  <td>
  <p>Server</p>
  </td>
  <td>
  <p>R</p>
  </td>
  <td>
  <p>Name of the server this data collector set belongs to.</p>
  </td>
 </tr><tr>
  <td>
  <p>Status</p>
  </td>
  <td>
  <p>R</p>
  </td>
  <td>
  <p>Status of the data collector set.</p>
  </td>
 </tr><tr>
  <td>
  <p>StopOnCompletion</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>Determines whether a data collector set MUST stop when
  all data collectors complete. A data collector completes when the first
  segment is collected. The definition of completion depends on the data
  collector type, and is not generally defined as the point at which the data
  collector has collected all possible data. For an <a href="0f979443-9db2-4805-b2ea-e1540d8b0533" data-linktype="relative-path">IConfigurationDataCollector</a>,
  completion occurs when all data has been collected. For an <a href="07d907e9-10ed-42f6-9135-9131657a240f" data-linktype="relative-path">IAlertDataCollector</a> or <a href="fed87908-2a85-4cf6-b4ac-723b81b00e1b" data-linktype="relative-path">IApiTracingDataCollector</a>,
  completion occurs immediately (that is, no data will be collected if this
  property is set to true). For an <a href="489d285e-94eb-46b2-8a53-b3501a61b572" data-linktype="relative-path">IPerformanceCounterDataCollector</a>
  or <a href="ebd49d76-5e50-4dd3-869c-8bba6eba42f7" data-linktype="relative-path">ITraceDataCollector</a>,
  completion occurs immediately if no limit is set on the output file size or
  time spent writing to the output file. If there is a maximum file size per
  output file, or a maximum duration per output file, completion occurs when
  the data collector has finished writing to the current file. </p>
  </td>
 </tr><tr>
  <td>
  <p>Subdirectory</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>Retrieves or sets a base subdirectory of the root path
  where the next instance of the data collector set will write its logs.</p>
  </td>
 </tr><tr>
  <td>
  <p>SubdirectoryFormat</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>Determines what to include in the decoration the
  subdirectory name.</p>
  </td>
 </tr><tr>
  <td>
  <p>SubdirectoryFormatPattern</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>If patterns are to be included in the decoration of
  subdirectory names, determines the pattern to use.</p>
  </td>
 </tr><tr>
  <td>
  <p>Task</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p> Name of the task that is executed when the data
  collector set stops or prior to switching to a new segment. The name of the
  task needs to correspond to the name of a job stored in the Task Scheduler.
  When a task is created, the creator of a task specifies its name as a BSTR. </p>
  <p> More information on the names of Task Scheduler jobs
  (referred to as paths in the Task Scheduler documentation) is specified in <a href="../ms-tsch/d1058a28-7e02-4948-8b8d-4a347fa64931" data-linktype="relative-path">[MS-TSCH]</a>
  section <a href="../ms-tsch/fa8809c8-4f0f-4c6d-994a-6c10308757c1" data-linktype="relative-path">2.3.11</a>.
  This documentation describes the semantics of the task name and explains the
  restrictions on task names. </p>
  </td>
 </tr><tr>
  <td>
  <p>TaskArguments</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>If a task is to run, this specifies what arguments
  MUST be passed to it.</p>
  </td>
 </tr><tr>
  <td>
  <p>TaskRunAsSelf</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>When a Task Scheduler job is executed by the
  DataCollectorSet, this property determines which user it will run as. If the
  property is set to true, the Task Scheduler job runs as the same user that
  the DataCollectorSet is running as. By default, this means the Task Scheduler
  job will run with System credentials. Consequently, it is not advisable to
  set this property to true when the task to be run is not fully trusted,
  unless the UserAccount property for the DataCollectorSet has been carefully
  configured. When the property is set to false, the Task Scheduler job will
  run with the credentials it was created with.</p>
  <p> The mechanism in use here is delegation. When the
  creator of a data collector set sets this property to true, this task is
  thereby granted the same rights that the data collector set has.</p>
  <p> When the RunAsSelf property is set to false, no
  delegation occurs. The task will run only with the permissions it was created
  with. The credentials that the task runs with are initially created with
  SchRpcRegisterTask specified in [MS-TSCH] section <a href="../ms-tsch/849c131a-64e4-46ef-b015-9d4c599c5167" data-linktype="relative-path">3.2.5.4.2</a>
  and can be updated by SASetAccountInformation specified in [MS-TSCH] section <a href="../ms-tsch/ca3e0305-4582-4e75-9c27-598c715f771d" data-linktype="relative-path">3.2.5.3.4</a>.
  </p>
  </td>
 </tr><tr>
  <td>
  <p>TaskUserTextArguments</p>
  </td>
  <td>
  <p>RW</p>
  </td>
  <td>
  <p>If a task is to run and the arguments, as specified in
  section <a href="0393f6eb-d33d-47ee-b214-c52952489df7" data-linktype="relative-path">3.2.4.1.38</a>,
  include the {usertext} variable, this property determines the value of this
  variable.</p>
  </td>
 </tr><tr>
  <td>
  <p>UserAccount</p>
  </td>
  <td>
  <p>R</p>
  </td>
  <td>
  <p>Determines the user account under which the data
  collector set will run.</p>
  </td>
 </tr><tr>
  <td>
  <p>Xml</p>
  </td>
  <td>
  <p>R</p>
  </td>
  <td>
  <p>The XML representation of the data collector set.</p>
  </td>
 </tr></tbody></table><p>A data collector set can be represented as an XML file,
which can be used to serialize (using IDataCollectorSet::Xml (Get)<a href="e29452dd-53fc-4999-b595-cdefd647e983" data-linktype="relative-path">3.2.4.1.46</a>) and
deserialize (using IDataCollectorSet::SetXml <a href="dc40db82-6894-4e47-96f8-df0ba863594d" data-linktype="relative-path">3.2.4.1.58</a>) it. The format
of the XML that defines a data collector set is as follows. All the elements of
the data collector set, as well as all child elements within the data collector
set element, are specified in section <a href="b5be2d38-3f21-478d-a8b9-a61128eb2751" data-linktype="relative-path">3.2.4.19</a>: </p><dl>
<dd>
<div><pre> &lt;DataCollectorSet&gt;
    &lt;Status&gt;&lt;/Status&gt;
   &lt;Duration&gt;&lt;/Duration&gt;
   &lt;Description&gt;&lt;/Description&gt;
   &lt;DescriptionUnresolved&gt;&lt;/DescriptionUnresolved&gt;
   &lt;DisplayName&gt;&lt;/DisplayName&gt;
   &lt;DisplayNameUnresolved&gt;&lt;/DisplayNameUnresolved&gt;
   &lt;SchedulesEnabled&gt;&lt;/SchedulesEnabled&gt;
   &lt;Schedule&gt;
      &lt;StartDate/&gt;
      &lt;EndDate/&gt;
      &lt;StartTime/&gt;
      &lt;Days/&gt;
   &lt;/Schedule&gt;
   &lt;LatestOutputLocation&gt;&lt;/LatestOutputLocation&gt;
   &lt;Name&gt;&lt;/Name&gt;
   &lt;OutputLocation&gt;&lt;/OutputLocation&gt;
   &lt;RootPath&gt;&lt;/RootPath&gt;
   &lt;Segment&gt;&lt;/Segment&gt;
   &lt;SegmentMaxDuration&gt;&lt;/SegmentMaxDuration&gt;
   &lt;SegmentMaxSize&gt;&lt;/SegmentMaxSize&gt;
   &lt;SerialNumber&gt;&lt;/SerialNumber&gt;
   &lt;Server&gt;&lt;/Server&gt;
   &lt;Subdirectory&gt;&lt;/Subdirectory&gt;
   &lt;SubdirectoryFormat&gt;&lt;/SubdirectoryFormat&gt;
   &lt;SubdirectoryFormatPattern&gt;&lt;/SubdirectoryFormatPattern&gt;
   &lt;Task&gt;&lt;/Task&gt;
   &lt;TaskRunAsSelf&gt;&lt;/TaskRunAsSelf&gt;
   &lt;TaskArguments&gt;&lt;/TaskArguments&gt;
   &lt;TaskUserTextArguments&gt;&lt;/TaskUserTextArguments&gt;
   &lt;UserAccount&gt;&lt;/UserAccount&gt;
   &lt;Security&gt;&lt;/Security&gt;
   &lt;StopOnCompletion&gt;&lt;/StopOnCompletion&gt;
   &lt;!-- elements for different data collector types…please see respective sections --&gt;
 &lt;/DataCollectorSet:&gt;
  
  
</pre></div>
</dd></dl><p>The nodes &#34;Keyword&#34;, &#34;Schedule&#34;, and
&#34;FolderAction&#34; can have multiple copies—one for each keyword,
schedule, or folder action, respectively. For each data collector, one node
under the &#34;DataCollectorSet&#34; node is also added; the name of the node
depends on the type of data collector, and is documented in the data collector
section.</p><p>The Keywords property is a safearray, which is translated
into XML as a series of Keyword nodes. For example, if Keywords is set to
{&#34;A&#34;, &#34;B&#34;, &#34;C&#34;}, there are three Keyword nodes,
one for each keyword.</p><p>Similarly, Schedules is a collection of Schedule objects,
which means that if the Schedules property contains three schedules, three
nodes called &#34;Schedule&#34; are created for each schedule.</p><p>DataCollectors is not in XML for the same reason as
Schedules. However, because data collectors have types instead of having a
number of &#34;DataCollector&#34; nodes, there are a number of typed data
collector nodes. For example, &#34;AlertDataCollector&#34; or
&#34;PerformanceCounterDataCollector&#34;.</p><p>Methods in RPC Opnum order:</p><table><thead>
  <tr>
   <th>
   <p>Method</p>
   </th>
   <th>
   <p>Description</p>
   </th>
  </tr>
 </thead><tbody><tr>
  <td>
  <p><a href="2f85c065-92c9-4c39-a964-7a5e46153fde" data-linktype="relative-path">DataCollectors
  (Get)</a></p>
  </td>
  <td>
  <p>List of data collectors in this data collector set.</p>
  <p>Opnum: 7</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="c134d4af-6086-489e-9778-e1871b63053b" data-linktype="relative-path">Duration
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Duration property.</p>
  <p>Opnum: 8</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="d333f3c9-66b1-4257-97e3-0e1ab905e292" data-linktype="relative-path">Duration
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the Duration property.</p>
  <p>Opnum: 9</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="6a3f9ae4-a258-4341-8ec5-dea291c5e33c" data-linktype="relative-path">Description
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Description property.</p>
  <p>Opnum: 10</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="ed46cee6-5af2-42ce-bc92-e7f791648129" data-linktype="relative-path">Description
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the Description property.</p>
  <p>Opnum: 11</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="c8037b3a-3e67-4c98-bcf7-1992888cfc71" data-linktype="relative-path">DescriptionUnresolved
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the DescriptionUnresolved property.</p>
  <p>Opnum: 12</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="f6a16505-f406-4e61-9a66-01019b8cb825" data-linktype="relative-path">DisplayName
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the display name of the data collector set .</p>
  <p>Opnum: 13</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="da99e9ca-5dfd-422b-90c7-f474b2fb5b2d" data-linktype="relative-path">DisplayName
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the DisplayName property.</p>
  <p>Opnum: 14</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="f3c3b6ab-f075-405b-8719-0d885bde3bc3" data-linktype="relative-path">DisplayNameUnresolved
  (Get)</a></p>
  </td>
  <td>
  <p>Receives the display name of the data collector set in
  its original form.</p>
  <p>Opnum: 15</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="e0d56db0-adbe-4596-bd30-6fa7ed22afdd" data-linktype="relative-path">Keywords
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Keywords property.</p>
  <p>Opnum: 16</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="48c9bab4-ba47-4486-8b01-fb9e8294870b" data-linktype="relative-path">Keywords
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the Keywords property.</p>
  <p>Opnum: 17</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="975b457f-ecf9-45e6-b6f7-2f69f37da025" data-linktype="relative-path">LatestOutputLocation
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the LatestOutputLocation property.</p>
  <p>Opnum: 18</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="aa4e37b8-508c-4ac4-97c0-6245ee505890" data-linktype="relative-path">LatestOutputLocation
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the LatestOutputLocation property.</p>
  <p>Opnum: 19</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="1cc8219f-097a-4e16-9eb9-46e1538100bf" data-linktype="relative-path">Name
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Name property.</p>
  <p>Opnum: 20</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="e6faef1e-b0e7-48a1-9eeb-855c106f9f95" data-linktype="relative-path">OutputLocation
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the OutputLocation property.</p>
  <p>Opnum: 21</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="62fbe425-7eb1-4b77-b1e6-fb9a1b8120a7" data-linktype="relative-path">RootPath
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the RootPath property.</p>
  <p>Opnum: 22</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="68076265-4736-4ab9-9e28-cb3a62877221" data-linktype="relative-path">RootPath
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the RootPath property.</p>
  <p>Opnum: 23</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="b3b20ac5-dc60-46f5-b930-8c9581936113" data-linktype="relative-path">Segment
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Segment property.</p>
  <p>Opnum: 24</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="2ddbc8a2-ffb2-46b8-81d8-86da30b17f5c" data-linktype="relative-path">Segment
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the Segment property.</p>
  <p>Opnum: 25</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="790ac479-7c9a-4ce2-ac82-108ac3e5121d" data-linktype="relative-path">SegmentMaxDuration
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the SegmentMaxDuration property.</p>
  <p>Opnum: 26</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="ad2b9542-a157-481c-9cff-6b41e223ea13" data-linktype="relative-path">SegmentMaxDuration
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the SegmentMaxDuration property.</p>
  <p>Opnum: 27</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="36f67ac8-1bf5-49f3-89f2-ccc2b9c9b203" data-linktype="relative-path">SegmentMaxSize
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the SegmentMaxSize property.</p>
  <p>Opnum: 28</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="b9e6813c-4271-4835-b579-d52f5a6c1b0e" data-linktype="relative-path">SegmentMaxSize
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the SegmentMaxSize property.</p>
  <p>Opnum: 29</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="d3a32fb2-e203-4c89-a6f7-c9f77711724d" data-linktype="relative-path">SerialNumber
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the SerialNumber property.</p>
  <p>Opnum: 30</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="fa4d2d07-aec8-4189-bfe0-f0cbd2170995" data-linktype="relative-path">SerialNumber
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the SerialNumber property.</p>
  <p>Opnum: 31</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="c05f73b6-c957-4b32-a2a5-bde7d8ba3a46" data-linktype="relative-path">Server
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Server property.</p>
  <p>Opnum: 32</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="695c56b5-8762-419d-a047-aa9762d188c4" data-linktype="relative-path">Status
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Status property.</p>
  <p>Opnum: 33</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="dd3793cd-cc87-4e3c-9526-13f6b55c5486" data-linktype="relative-path">Subdirectory
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Subdirectory property.</p>
  <p>Opnum: 34</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="f9663db2-eb4e-4ad2-995e-a02276b39e15" data-linktype="relative-path">Subdirectory
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the Subdirectory property.</p>
  <p>Opnum: 35</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="1f41fd3d-37b7-4da7-b087-a5453b5a090c" data-linktype="relative-path">SubdirectoryFormat
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the SubdirectoryFormat property.</p>
  <p>Opnum: 36</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="aa59cf78-8f48-4ef1-8039-4464b9369fd2" data-linktype="relative-path">SubdirectoryFormat
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the SubdirectoryFormat property.</p>
  <p>Opnum: 37</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="079d7226-f69b-4ed1-94bb-7644791bfc42" data-linktype="relative-path">SubdirectoryFormatPattern
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the SubdirectoryFormatPattern property.</p>
  <p>Opnum: 38</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="dafe1180-3490-48f7-87e9-3c6850e38ca2" data-linktype="relative-path">SubdirectoryFormatPattern
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the SubdirectoryFormatPattern property.</p>
  <p>Opnum: 39</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="ab2d1ae4-ada4-4c2e-867a-8dc1556b431d" data-linktype="relative-path">Task
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Task property.</p>
  <p>Opnum: 40</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="c9cdbb7d-1f57-4ecc-a140-8a522662f610" data-linktype="relative-path">Task
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the Task property.</p>
  <p>Opnum: 41</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="288d3e64-6213-4899-9cca-9ee48fb38c24" data-linktype="relative-path">TaskRunAsSelf
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the TaskRunAsSelf property.</p>
  <p>Opnum: 42</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="8399f9bf-f298-47fd-bf9f-75250ba298e7" data-linktype="relative-path">TaskRunAsSelf
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the TaskRunAsSelf property.</p>
  <p>Opnum: 43</p>
  </td>
 </tr><tr>
  <td>
  <p>TaskArguments (Get)</p>
  </td>
  <td>
  <p>Retrieves the TaskArguments property.</p>
  <p>Opnum: 44</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="7058da41-f7f5-498b-80e2-37b09286cae6" data-linktype="relative-path">TaskArguments
  (Put)</a></p>
  </td>
  <td>
  <p> Sets the TaskArguments property.</p>
  <p>Opnum: 45</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="0624356a-801f-4816-a3ca-2fa2308d178c" data-linktype="relative-path">TaskUserTextArguments
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the TaskUserTextArguments property. </p>
  <p>Opnum: 46</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="bc1c6b48-cfe9-4f9b-9d20-911edad409b2" data-linktype="relative-path">TaskUserTextArguments
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the TaskUserTextArguments property.</p>
  <p>Opnum: 47</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="07e26599-d209-47ac-8529-e46a1a467e0d" data-linktype="relative-path">Schedules
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Schedules property.</p>
  <p>Opnum: 48</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="9f2372bd-b4bc-4839-982b-c32393d852ac" data-linktype="relative-path">SchedulesEnabled
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the SchedulesEnabled property.</p>
  <p>Opnum: 49</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="bbadf058-49fd-424e-97e9-565071fc298d" data-linktype="relative-path">SchedulesEnabled
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the SchedulesEnabled property.</p>
  <p>Opnum: 50</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="6d9dc6a2-d8e9-4589-bce2-e9b8389556bc" data-linktype="relative-path">UserAccount
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the UserAccount property.</p>
  <p>Opnum: 51</p>
  </td>
 </tr><tr>
  <td>
  <p>Xml (Get)</p>
  </td>
  <td>
  <p>Retrieves the Xml property.</p>
  <p>Opnum: 52</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="2e95f6ab-8f78-42d3-993c-0f3681d6eecd" data-linktype="relative-path">Security
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the Security property.</p>
  <p>Opnum: 53</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="082a9e93-3b57-46e7-93db-dc2ffd382380" data-linktype="relative-path">Security
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the Security property.</p>
  <p>Opnum: 54</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="a8a92c2e-cabc-42d5-923f-89725a6e33e2" data-linktype="relative-path">StopOnCompletion
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the StopOnCompletion property.</p>
  <p>Opnum: 55</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="477ec889-a990-4e45-ba7a-fe2bb0a335d1" data-linktype="relative-path">StopOnCompletion
  (Put)</a></p>
  </td>
  <td>
  <p>Sets the StopOnCompletion property.</p>
  <p>Opnum: 56</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="e0746ba2-d81e-423c-82b7-93316d7e0980" data-linktype="relative-path">DataManager
  (Get)</a></p>
  </td>
  <td>
  <p>Retrieves the DataManager property.</p>
  <p>Opnum: 57</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="caca3757-f47d-44ab-955c-cc4ac2550835" data-linktype="relative-path">SetCredentials</a></p>
  </td>
  <td>
  <p>Specifies the user account under which the data
  collector set runs.</p>
  <p>Opnum: 58</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="c46b18ee-6f95-4c34-90fc-b597abbe2770" data-linktype="relative-path">Query</a></p>
  </td>
  <td>
  <p>Loads the properties of a data collector set from
  storage to memory.</p>
  <p>Opnum: 59</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="b7b0e0f8-327c-46de-b034-3d598306890e" data-linktype="relative-path">Commit</a></p>
  </td>
  <td>
  <p>Updates, validates, or saves a data collector set or
  flushes the event trace data collectors of a data collector set.</p>
  <p>Opnum: 60</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="305c3442-6a96-43b6-8144-c0cfb1ebbec1" data-linktype="relative-path">Delete</a></p>
  </td>
  <td>
  <p>Removes the data collector set from storage if it is
  not running.</p>
  <p>Opnum: 61</p>
  </td>
 </tr><tr>
  <td>
  <p>Start</p>
  </td>
  <td>
  <p>Manually starts the data collector set.</p>
  <p>Opnum: 62</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="2617595b-63fc-4c23-b674-4cb3e062eb6f" data-linktype="relative-path">Stop</a></p>
  </td>
  <td>
  <p>Manually stops the data collector set.</p>
  <p>Opnum: 63</p>
  </td>
 </tr><tr>
  <td>
  <p>SetXml</p>
  </td>
  <td>
  <p>Sets the property values of the data collector set
  based on an XML file.</p>
  <p>Opnum: 64</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="5694ec53-5f21-4148-a53c-7a74efd817ed" data-linktype="relative-path">SetValue</a></p>
  </td>
  <td>
  <p>Sets a user-defined value.</p>
  <p>Opnum: 65</p>
  </td>
 </tr><tr>
  <td>
  <p><a href="d5f37f82-f6cd-433b-94e1-6b5520152685" data-linktype="relative-path">GetValue</a></p>
  </td>
  <td>
  <p>Retrieves a user-defined value.</p>
  <p>Opnum: 66</p>
  </td>
 </tr></tbody></table><p>Opnums 0, 1, and 2 are reserved for the IUnknown interface.
Opnums 3, 4, 5, and 6 are reserved for the IDispatch interface.</p></div>